//입출력
short const trig = 2;
short const echo = 3;
short const rainingPin = A1;

//전원
short const lvSensor = 8;
short const rainSensor = 9;

//변수
bool isWater = false;
bool initial = true;
long initialDistance;

void setup(){
  //초기화
  Serial.begin(9600); 
  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);

  //전원 초기화
  pinMode(lvSensor, OUTPUT);
  pinMode(rainSensor, OUTPUT);



  //빗물 센서 전원 공급
  digitalWrite(rainSensor, HIGH);
  digitalWrite(lvSensor, HIGH);
} 

void loop(){ 
  long distance = 0;

  //초기 거리 측정
  if(initial){
    do{
      initialDistance = getDistance(true);
    }while(initialDistance < 1)

    digitalWrite(lvSensor, LOW);
    initial = false;
  
    Serial.print("Initial Distance: ");
    Serial.println(initialDistance);
  }

  if(isWater){
    distance = getDistance(false);
  }
  else{
    isWater = waterDetect();
  }

  //출력
  sendData(distance);

  //인출속도 조절
  delay(500);
}

void sendData(long level){
  Serial.print("Water detected : ");
  Serial.print(isWater);
  Serial.print("\ndistance : ");
  Serial.print(level);
  Serial.print("cm");
  Serial.print("\n");
}

long getDistance(bool initial){
  //송수신 실수변수 지정
  unsigned long duration;

  //센서에 전기신호 준 후 전압을 가하지 않은 상태로 전환
  digitalWrite(trig, HIGH);
  delay(500);
  digitalWrite(trig, LOW);

  //시간을 duration 변수에 저장
  duration = pulseIn(echo, HIGH);
  Serial.println(duration);

  //duration 변수를 cm로 표현
  if(initial){
    return (long)(duration * 0.017);
  }
  else{
    return (long)(initialDistance - duration * 0.017);
  }
}

bool waterDetect(){
  if (analogRead(rainingPin)< 500){
    digitalWrite(rainSensor, LOW);
    digitalWrite(lvSensor, HIGH);
    return true;
  }
  else{
    return false;
  }
}